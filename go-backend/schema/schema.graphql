type Category {
    id: ID!
    name: String!
    parentCategory: Category
    products: [Product!]!
}

type Product {
    id: ID!
    name: String!
    description: String
    price: Float!
    stockQuantity: Int!
    category: Category
    images: [ProductImage!]!
    attributes: [ProductAttribute!]!
    reviews: [Review!]!
}

type ProductImage {
    id: ID!
    imageUrl: String!
    isPrimary: Boolean!
}

type ProductAttribute {
    id: ID!
    name: String!
    value: String!
}

type User {
    id: ID!
    email: String!
    firstName: String
    lastName: String
}

type Order {
    id: ID!
    user: User!
    totalAmount: Float!
    status: String!
    items: [OrderItem!]!
    createdAt: String!
}

type OrderItem {
    id: ID!
    product: Product!
    quantity: Int!
    priceAtTime: Float!
}

type Review {
    id: ID!
    product: Product!
    user: User!
    rating: Int!
    comment: String
    createdAt: String!
}

type Query {
    product(id: ID!): Product
    products(category: ID, search: String): [Product!]!
    categories: [Category!]!
    order(id: ID!): Order
    userOrders(userId: ID!): [Order!]!
}

type Mutation {
    createProduct(input: ProductInput!): Product!
    updateProduct(id: ID!, input: ProductInput!): Product!
    deleteProduct(id: ID!): Boolean!
    createOrder(input: OrderInput!): Order!
    createReview(input: ReviewInput!): Review!
    createCategory(input: CategoryInput!): Category!
}

input ProductInput {
    name: String!
    description: String
    price: Float!
    stockQuantity: Int!
    categoryId: ID!
}

input CategoryInput {
    name: String!
    parentId: ID
}

input OrderInput {
    userId: ID!
    totalAmount: Float!
    items: [OrderItemInput!]!
}

input OrderItemInput {
    productId: ID!
    quantity: Int!
}

input ReviewInput {
    productId: ID!
    userId: ID!
    rating: Int!
    comment: String!
}

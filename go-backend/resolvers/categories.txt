package resolvers

import (
	"context"
	"database/sql"
	"go-backend/db"
	"go-backend/models"
)

type Resolver struct{}

func (r *Resolver) Categories(ctx context.Context) ([]*CategoryResolver, error) {
	rows, err := db.DB.Query("SELECT id, name, parent_category_id FROM categories")
	if err != nil {
		return nil, err
	}
	defer rows.Close()

	var categories []*CategoryResolver
	for rows.Next() {
		var c models.Category
		var parentCategoryID sql.NullInt64
		if err := rows.Scan(&c.ID, &c.Name, &parentCategoryID); err != nil {
			return nil, err
		}

		if parentCategoryID.Valid {
			c.ParentCategory = &models.Category{ID: int(parentCategoryID.Int64)}
		}

		categories = append(categories, &CategoryResolver{c})
	}

	return categories, nil
}
